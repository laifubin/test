name: Deployment

on:
    # 自动触发部署
    push:
        branches: [test]
        paths:
            - 'src/**'
            - 'public/**'
            - 'package.json'
            - 'package-lock.json'

    # 手动触发部署
    workflow_dispatch:
        inputs:
            target_branch:
                description: '目标分支 (main/master)'
                required: false
                default: 'master'

env:
    NODE_VERSION: 'lts/*'
    DEPLOY_PATH: '/var/www/html'
    APP_NAME: 'frontend-app'

jobs:
    deploy:
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.target_branch == 'main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.target_branch == 'master') || (github.event_name == 'push' && github.ref == 'refs/heads/test')

        runs-on: ubuntu-latest

        steps:
            - name: 检出代码
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # 获取所有提交历史，用于获取完整的 commit id
                      # 根据触发方式选择分支
                  ref: ${{ github.event_name == 'push' && 'test' || github.event.inputs.target_branch }}

            - name: 安装 pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.6.2
                  run_install: false

            - name: 设置 Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: 安装依赖
              run: pnpm install

            - name: 构建应用
              run: pnpm run build

            - name: 生成部署包
              run: |
                  # 使用 commit id 和时间戳作为部署版本
                  COMMIT_ID=$(git rev-parse --short HEAD)
                  TIMESTAMP=$(date +%Y%m%d_%H%M%S)
                  echo "DEPLOY_VERSION=${TIMESTAMP}_${COMMIT_ID}" >> $GITHUB_ENV
                  tar -czf dist.tar.gz dist/

            - name: 部署到服务器
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SERVER_SSH_KEY }}
                  source: 'dist.tar.gz'
                  target: '/tmp'

            - name: 执行部署
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SERVER_SSH_KEY }}
                  script: |
                      # 创建备份
                      if [ -d "${{ env.DEPLOY_PATH }}/${{ env.APP_NAME }}/dist" ]; then
                        cd ${{ env.DEPLOY_PATH }}/${{ env.APP_NAME }}
                        tar -czf "${{ env.APP_NAME }}_${{ env.DEPLOY_VERSION }}.backup.tar.gz" dist
                        mv "${{ env.APP_NAME }}_${{ env.DEPLOY_VERSION }}.backup.tar.gz" ../
                        echo "备份创建成功: ${{ env.APP_NAME }}_${{ env.DEPLOY_VERSION }}.backup.tar.gz"
                      fi

                      # 清理超过7天的备份文件
                      cd ${{ env.DEPLOY_PATH }}
                      echo "清理超过7天的备份文件..."
                      find . -name "${{ env.APP_NAME }}_*.backup.tar.gz" -type f -mtime +7 -delete
                      echo "当前备份文件:"
                      ls -la | grep "\.backup\.tar\.gz" | sort || echo "无备份文件"

                      # 部署新版本
                      cd /tmp
                      rm -rf ${{ env.DEPLOY_PATH }}/${{ env.APP_NAME }}/dist
                      mkdir -p ${{ env.DEPLOY_PATH }}/${{ env.APP_NAME }}/dist
                      tar -xzf dist.tar.gz -C ${{ env.DEPLOY_PATH }}/${{ env.APP_NAME }}/dist --strip-components 1
                      rm dist.tar.gz
                      echo "部署成功: 版本 ${{ env.DEPLOY_VERSION }}"

  